#! /bin/bash
# vim: ts=4 sw=4 et ai

## =====================================================================
##  configuration
## ---------------------------------------------------------------------

_DOTFILES_REPO='https://github.com/ptolemarch/dotfiles.git'

_BEFORE_YADM_DIR='.before-yadm'
_YADM_BOOTSTRAP_URL='bootstrap.yadm.io'


## =====================================================================
##  functions
## ---------------------------------------------------------------------

_blurt()
{
    printf "$@" 1>&2
}

_warn()
{
    for line in "$@"; do
        echo "$line" 1>&2
    done
}

_die()
{
    errval="$1"; shift
    _warn "$@"
    exit "$errval"
}

is_present()
{
    command="$1"; shift

    command -v "$command" > /dev/null 2>&1
}

check_commands_present()
{
    for command in "$@"; do
        _blurt "checking for '$command'... "
        if is_present "$command"; then
            which "$command"
        else
            _die 1 "can't find command '$command' installed," \
                   "  which I require"
        fi
    done
}

# note the semantics of this function,
#  which returns true if the dotfile should be saved.
# Otherwise, returns false and echos a reason for skipping it
_shall_I_save_this_dotfile()
{
    some_dotfile="$1"; shift

    case $some_dotfile in
        .|..)
            # don't echo any particular reason
            return 1
            ;;
        $_BEFORE_YADM_DIR)
            echo "cravenly refusing to place before-yadm directory inside itself"
            return 1
            ;;
        .Trash|.DS_Store|.CFUserTextEncoding)
            echo "MacOS-specific file"
            return 1
            ;;
        *)
            return 0
    esac
}

save_existing_dotfiles()
{
    if test -d "$_BEFORE_YADM_DIR"; then
        _die 1 "directory '$_BEFORE_YADM_DIR' exists" \
               "  and right now I don't know what should happen in this case" \
               "  (sorry)"
    fi
    
    mkdir "$_BEFORE_YADM_DIR" \
    || _die 1 "can't create directory '$_BEFORE_YADM_DIR'" \
              "  in which I had planned on saving existing dotfiles" \
              "  (sorry, I won't proceed without it)"

    _warn "saving exisiting dotfiles to" \
          "  ~/'$_BEFORE_YADM_DIR'"
    for existing_dotfile in .*; do
        if skip_reason=`_shall_I_save_this_dotfile "$existing_dotfile"`; then
            mv -v "$existing_dotfile" "$_BEFORE_YADM_DIR" \
            || _die 1 "can't move '$existing_dotfile' to '$_BEFORE_YADM_DIR'" \
                      "  so I'm stopping here before I really h0rk things"
        else
            _warn "skipping '$existing_dotfile': $skip_reason"
        fi
    done
}

source_yadm_bootstrap()
{
    if is_present yadm; then
        _warn "yadm was found installed. I wasn't expecting this," \
              "  but perhaps we can continue with the yadm you have."
        
        if yadm version | grep 'yadm 2'; then
            _warn "yadm version 2 found; probably safe to proceed"
        else
            _die 1 "yadm found, but not version 2; I haven't coded for this."
        fi
    fi

    _warn "attempting to make temporary file (to source yadm bootstrap)"
    yadm_bootstrap_temp=`mktemp` \
    || _die 1 "can't make temporary file for YADM bootstrap"
    _warn "made temporary YADM bootstrap file: '$yadm_bootstrap_temp'"

    curl -L "$_YADM_BOOTSTRAP_URL" > "$yadm_bootstrap_temp"
    source "$yadm_bootstrap_temp" > /dev/null
    rm "$yadm_bootstrap_temp"

    if is_present yadm; then :; else
        _die 1 "yadm should exist at this moment (probably as a function)" \
               "  but it doesn't exist. I can't proceed without it."
    fi
}


## =====================================================================
##  start in $HOME
## ---------------------------------------------------------------------

cd

## =====================================================================
##  prepare
## ---------------------------------------------------------------------

check_commands_present gpg
source_yadm_bootstrap

yadm version \
|| _die 1 "yadm should exist but couldn't query its version." \
          "(this is fatal and also very weird)"

## =====================================================================
##  make it happen
## ---------------------------------------------------------------------

save_existing_dotfiles

yadm clone "$_DOTFILES_REPO" \
|| _die 1 "unable to even clone dotfiles repo"

yadm submodule update --init --recursive \
|| _die 1 "unable to update submodules"

export GPG_TTY=$(tty)
yadm decrypt \
|| _die 1 "unable to decrypt private repo"

yadm remote set-url origin git@github.com:ptolemarch/dotfiles.git \
|| _die 1 "unable to set remote origin of main repo"

cd .yadm-private \
|| _die 1 "there's no reason this cd should have died"

git config credential.helper store \
|| _die 1 "unable to tell git to store private repo password"

git fetch \
|| _die 1 "unable to fetch private repo after (to store password)"
