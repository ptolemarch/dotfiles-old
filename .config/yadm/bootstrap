#! /bin/bash
# vim: ts=4 sw=4 et ai

# one-line installation of dotfiles:
#  curl -L bootstrap.yadm.io | bash -s -- https://github.com/ptolemarch/dotfiles.git

_YADM_BOOTSTRAP_URL='bootstrap.yadm.io'

## =====================================================================
##  functions
## ---------------------------------------------------------------------

_blurt()
{
    printf "$@" 1>&2
}

_warn()
{
    for line in "$@"; do
        echo "$line" 1>&2
    done
}

_die()
{
    errval="$1"; shift
    _warn "$@"
    exit "$errval"
}

is_present()
{
    command="$1"; shift

    command -v "$command" > /dev/null 2>&1
}

source_yadm_bootstrap()
{
    if is_present yadm; then
        _warn "yadm was found installed. I wasn't expecting this," \
              "  but perhaps we can continue with the yadm you have."

        if yadm version | grep 'yadm 2'; then
            _warn "yadm version 2 found; probably safe to proceed"
        else
            _die 1 "yadm found, but not version 2; I haven't coded for this."
        fi
    fi

    _warn "attempting to make temporary file (to source yadm bootstrap)"
    yadm_bootstrap_temp=`mktemp` \
    || _die 1 "can't make temporary file for YADM bootstrap"
    _warn "made temporary YADM bootstrap file: '$yadm_bootstrap_temp'"

    curl -L "$_YADM_BOOTSTRAP_URL" > "$yadm_bootstrap_temp"
    source "$yadm_bootstrap_temp" > /dev/null
    rm "$yadm_bootstrap_temp"

    if is_present yadm; then :; else
        _die 1 "yadm should exist at this moment (probably as a function)" \
               "  but it doesn't exist. I can't proceed without it."
    fi
}


## =====================================================================
##  main program
## ---------------------------------------------------------------------

cd "$HOME" || die 1 "can't cd to '$HOME'"

# get temporary yadm
source_yadm_bootstrap

yadm submodule update --init --recursive


# - save GitHub PAT?
#   - would be nice to do this first, so the PAT is still available, maybe
#     still in clipboard

# - initialize submodules

# - decrypt .yadm-private
